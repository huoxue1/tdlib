name: CI

on: [push, pull_request]

env:
  BINARY_PREFIX: "tdlib_"
  BINARY_SUFFIX: ""
  COMMIT_ID: "${{ github.sha }}"
  PR_PROMPT: "::warning:: Build artifact will not be uploaded due to the workflow is trigged by pull request."
  LD_FLAGS: "-w -s"

jobs:
  build:
    name: Build binary CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm, arm64]
        exclude:
          - goos: darwin
            goarch: arm
          - goos: darwin
            goarch: "386"
          - goos: windows
            goarch: arm64
          - goos: windows
            goarch: arm
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20

      - name: Build binary file
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          IS_PR: ${{ !!github.head_ref }}
          CGO_ENABLED: 0
        run: |
          if [ $GOOS = "windows" ]; then export BINARY_SUFFIX="$BINARY_SUFFIX.exe"; fi
          if $IS_PR ; then echo $PR_PROMPT; fi
          export BINARY_NAME="$BINARY_PREFIX$GOOS_$GOARCH$BINARY_SUFFIX"
          export LD_FLAGS="-w -s -X github.com/huoxue1/tdlib/conf.VERSION=unknown"
          go mod tidy
          go build -o "output/$BINARY_NAME" -trimpath -ldflags "$LD_FLAGS" .
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: ${{ !github.head_ref }}
        with:
          name: ${{ matrix.goos }}_${{ matrix.goarch }}
          path: output/
      - name: Upload webdav
        uses: bxb100/action-upload-webdav@v1
        with:
          webdav_address: ${{secrets.address}}
          webdav_username: ${{secrets.username}}
          webdav_password: ${{secrets.password}}
          webdav_upload_path: "/onedrive/software/tdlib/ci/"
          files: "output/**"


